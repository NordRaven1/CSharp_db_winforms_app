<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>